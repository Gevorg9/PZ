#Дана строка, содержащая латинские буквы и скобки трех видов: «()», «[]», «{}». Если
#скобки расставлены правильно (то есть каждой открывающей соответствует
#закрывающая скобка того же вида), то вывести число 0. В противном случае вывести
#или номер позиции, в которой расположена первая ошибочная скобка, или, если
#закрывающих скобок не хватает, число —1.
def check_brackets(s):
   stack = []  # стек для хранения открывающих скобок


   for i in range(len(s)):
       if s[i] in "([{":
           stack.append((s[i], i))  # добавляем открывающую скобку и ее позицию в стек
       elif s[i] in ")]}":
           if not stack:  # если стек пуст, значит закрывающих скобок больше, чем открывающих
               return -1
           opening_bracket, position = stack.pop()  # извлекаем последнюю добавленную скобку


           if (s[i] == ")" and opening_bracket != "(") or \
              (s[i] == "]" and opening_bracket != "[") or \
              (s[i] == "}" and opening_bracket != "{"):
               return position  # возвращаем позицию первой ошибочной закрывающей скобки


   if stack:
       return stack[-1][1]  # возвращаем позицию первой открывающей скобки, для которой
                            # не нашлась закрывающая скобка
   return 0  # все скобки расставлены правильно




s = input("Введите строку со скобками: ")
result = check_brackets(s)
print("Результат:", result)
